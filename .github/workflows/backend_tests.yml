name: Backend Tests and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

env:
  TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_ONLY }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  API_AUDIENCE: ${{ secrets.API_AUDIENCE }}
  TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
  TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
  AUTH0_MANAGEMENT_ID: ${{ secrets.AUTH0_MANAGEMENT_ID }}
  AUTH0_MANAGEMENT_SECRET: ${{ secrets.AUTH0_MANAGEMENT_SECRET }}
  AUTH0_ADMIN_ROLE_ID: ${{ secrets.AUTH0_ADMIN_ROLE_ID }}
  AUTH0_PATIENT_ROLE_ID: ${{ secrets.AUTH0_PATIENT_ROLE_ID }}
  AUTH0_PHYSICIAN_ROLE_ID: ${{ secrets.AUTH0_PHYSICIAN_ROLE_ID }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests with coverage
      - name: Run tests with coverage
        working-directory: backend
        run: |
          pytest --cov --cov-report=html --cov-report=term

      # Upload coverage report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage.html
